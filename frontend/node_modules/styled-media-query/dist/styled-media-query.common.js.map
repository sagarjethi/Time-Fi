{"version":3,"file":"styled-media-query.common.js","sources":["../src/convertors.js","../src/index.js"],"sourcesContent":["/**\n * Converts breakpoint units in px to rem or em\n * @param {Object} breakpoints - an object containing breakpoint names as keys and the width as value\n * @param {number} [16] ratio - size of 1 rem in px. What is your main font-size in px? \n * @param {'rem' | 'em'} unit\n */\nfunction pxToEmOrRem(breakpoints, ratio = 16, unit) {\n  const newBreakpoints = {};\n\n  for (let key in breakpoints) {\n    const point = breakpoints[key];\n\n    if (String(point).includes('px')) {\n      newBreakpoints[key] = +(parseInt(point) / ratio) + unit;\n      continue;\n    }\n\n    newBreakpoints[key] = point;\n  }\n\n  return newBreakpoints;\n}\n\n/**\n * Converts breakpoint units in px to em \n * @param {Object} breakpoints - an object containing breakpoint names as keys and the width as value\n * @param {number} [16] ratio - size of 1em in px. What is your main font-size in px? \n */\nexport function pxToEm(breakpoints, ratio = 16) {\n  return pxToEmOrRem(breakpoints, ratio, 'em');\n}\n\n/**\n * Converts breakpoint units in px to rem \n * @param {Object} breakpoints - an object containing breakpoint names as keys and the width as value\n * @param {number} [16] ratio - size of 1rem in px. What is your main font-size in px? \n */\nexport function pxToRem(breakpoints, ratio = 16) {\n  return pxToEmOrRem(breakpoints, ratio, 'rem');\n}\n","import { css } from 'styled-components';\nimport { pxToEm, pxToRem } from './convertors';\n\nexport {\n  pxToEm,\n  pxToRem\n};\n\n/**\n * Default media breakpoints\n * @type {Object}\n */\nexport const defaultBreakpoints = {\n  huge: '1440px',\n  large: '1170px',\n  medium: '768px',\n  small: '450px',\n};\n\nfunction getSizeFromBreakpoint(breakpointValue, breakpoints = {}) {\n  if (breakpoints[breakpointValue]) {\n    return breakpoints[breakpointValue];\n  } else if (parseInt(breakpointValue)) {\n    return breakpointValue;\n  } else {\n    console.error('styled-media-query: No valid breakpoint or size specified for media.');\n    return '0';\n  }\n}\n\n/**\n * Media query generator\n * @param {Object} breakpoints - Map labels to breakpoint sizes\n * @return {Object} - Media generators for each breakpoint\n */\nexport function generateMedia(breakpoints = defaultBreakpoints) {\n  const lessThan = (breakpoint) => (...args) => css`\n    @media (max-width: ${getSizeFromBreakpoint(breakpoint, breakpoints)}) {\n      ${css(...args)}\n    }\n  `;\n\n  const greaterThan = (breakpoint) => (...args) => css`\n    @media (min-width: ${getSizeFromBreakpoint(breakpoint, breakpoints)}) {\n      ${css(...args)}\n    }\n  `;\n\n  const between = (firstBreakpoint, secondBreakpoint) => (...args) => css`\n    @media (min-width: ${getSizeFromBreakpoint(firstBreakpoint, breakpoints)}) and\n      (max-width: ${getSizeFromBreakpoint(secondBreakpoint, breakpoints)}) {\n      ${css(...args)}\n    }\n  `;\n\n  const oldStyle = Object\n    .keys(breakpoints)\n    .reduce((acc, label) => {\n      const size = breakpoints[label];\n\n      acc.to[label] = (...args) => {\n        console.warn(`styled-media-query: Use media.lessThan('${label}') instead of old media.to.${label} (Probably we'll deprecate it)`);\n        return css`\n          @media (max-width: ${size}) {\n            ${css(...args)}\n          }\n        `;\n      };\n\n      acc.from[label] = (...args) => {\n        console.warn(`styled-media-query: Use media.greaterThan('${label}') instead of old media.from.${label} (Probably we'll deprecate it)`);\n        return css`\n          @media (min-width: ${size}) {\n            ${css(...args)}\n          }\n        `;\n      };\n\n      return acc;\n    },\n    { to: {}, from: {} }\n  );\n\n  return Object.assign(\n    {\n      lessThan,\n      greaterThan,\n      between,\n    },\n    oldStyle,\n  );\n}\n\n/**\n * Media object with default breakpoints\n * @return {object} - Media generators for each size\n */\nexport default generateMedia();\n\n/**\n * Usage: styled.div` ${media.from.medium`background: #000;`} `;\n * With this code, background for small and medium sizes will be `default` and for more than medium, will be `#000`\n */\n"],"names":["pxToEmOrRem","breakpoints","ratio","unit","newBreakpoints","key","point","String","includes","parseInt","pxToEm","pxToRem","defaultBreakpoints","getSizeFromBreakpoint","breakpointValue","error","generateMedia","lessThan","breakpoint","css","greaterThan","between","firstBreakpoint","secondBreakpoint","oldStyle","Object","keys","reduce","acc","label","size","to","warn","from","assign"],"mappings":";;;;;;AAAA;;;;;;AAMA,SAASA,WAAT,CAAqBC,WAArB,EAAoD;MAAlBC,KAAkB,uEAAV,EAAU;MAANC,IAAM;;MAC5CC,iBAAiB,EAAvB;;OAEK,IAAIC,GAAT,IAAgBJ,WAAhB,EAA6B;QACrBK,QAAQL,YAAYI,GAAZ,CAAd;;QAEIE,OAAOD,KAAP,EAAcE,QAAd,CAAuB,IAAvB,CAAJ,EAAkC;qBACjBH,GAAf,IAAsB,EAAEI,SAASH,KAAT,IAAkBJ,KAApB,IAA6BC,IAAnD;;;;mBAIaE,GAAf,IAAsBC,KAAtB;;;SAGKF,cAAP;;;;;;;;AAQF,AAAO,SAASM,MAAT,CAAgBT,WAAhB,EAAyC;MAAZC,KAAY,uEAAJ,EAAI;;SACvCF,YAAYC,WAAZ,EAAyBC,KAAzB,EAAgC,IAAhC,CAAP;;;;;;;;AAQF,AAAO,SAASS,OAAT,CAAiBV,WAAjB,EAA0C;MAAZC,KAAY,uEAAJ,EAAI;;SACxCF,YAAYC,WAAZ,EAAyBC,KAAzB,EAAgC,KAAhC,CAAP;;;;;;;;;;;ACtCF,AAQA;;;;AAIA,AAAO,IAAMU,qBAAqB;QAC1B,QAD0B;SAEzB,QAFyB;UAGxB,OAHwB;SAIzB;CAJF;;AAOP,SAASC,qBAAT,CAA+BC,eAA/B,EAAkE;MAAlBb,WAAkB,uEAAJ,EAAI;;MAC5DA,YAAYa,eAAZ,CAAJ,EAAkC;WACzBb,YAAYa,eAAZ,CAAP;GADF,MAEO,IAAIL,SAASK,eAAT,CAAJ,EAA+B;WAC7BA,eAAP;GADK,MAEA;YACGC,KAAR,CAAc,sEAAd;WACO,GAAP;;;;;;;;;AASJ,AAAO,SAASC,aAAT,GAAyD;MAAlCf,WAAkC,uEAApBW,kBAAoB;;MACxDK,WAAW,SAAXA,QAAW,CAACC,UAAD;WAAgB;aAAaC,oBAAb,kBACVN,sBAAsBK,UAAtB,EAAkCjB,WAAlC,CADU,EAE3BkB,gDAF2B;KAAhB;GAAjB;;MAMMC,cAAc,SAAdA,WAAc,CAACF,UAAD;WAAgB;aAAaC,oBAAb,mBACbN,sBAAsBK,UAAtB,EAAkCjB,WAAlC,CADa,EAE9BkB,gDAF8B;KAAhB;GAApB;;MAMME,UAAU,SAAVA,OAAU,CAACC,eAAD,EAAkBC,gBAAlB;WAAuC;aAAaJ,oBAAb,mBAChCN,sBAAsBS,eAAtB,EAAuCrB,WAAvC,CADgC,EAErCY,sBAAsBU,gBAAtB,EAAwCtB,WAAxC,CAFqC,EAGjDkB,gDAHiD;KAAvC;GAAhB;;MAOMK,WAAWC,OACdC,IADc,CACTzB,WADS,EAEd0B,MAFc,CAEP,UAACC,GAAD,EAAMC,KAAN,EAAgB;QAChBC,OAAO7B,YAAY4B,KAAZ,CAAb;;QAEIE,EAAJ,CAAOF,KAAP,IAAgB,YAAa;cACnBG,IAAR,+CAAwDH,KAAxD,oCAA2FA,KAA3F;aACOV,oBAAP,mBACuBW,IADvB,EAEMX,gDAFN;KAFF;;QASIc,IAAJ,CAASJ,KAAT,IAAkB,YAAa;cACrBG,IAAR,kDAA2DH,KAA3D,sCAAgGA,KAAhG;aACOV,oBAAP,mBACuBW,IADvB,EAEMX,gDAFN;KAFF;;WASOS,GAAP;GAvBa,EAyBf,EAAEG,IAAI,EAAN,EAAUE,MAAM,EAAhB,EAzBe,CAAjB;;SA4BOR,OAAOS,MAAP,CACL;sBAAA;4BAAA;;GADK,EAMLV,QANK,CAAP;;;;;;;AAcF,YAAeR,eAAf;;;;;;;;;;;;;"}