{"ast":null,"code":"import { withState, withHandlers, compose } from \"recompose\";\nvar modalToggleState = withState(\"open\", \"setModal\", false);\nvar modalEvents = withHandlers({\n  handleOpen: function handleOpen(_ref) {\n    var setModal = _ref.setModal;\n    return function () {\n      return setModal(true);\n    };\n  },\n  handleClose: function handleClose(_ref2) {\n    var setModal = _ref2.setModal;\n    return function () {\n      return setModal(false);\n    };\n  }\n});\nexport var ModalState = compose(modalToggleState, modalEvents); //typeof modalToggleState & typeof modalEvents,","map":{"version":3,"sources":["/home/ankit/zil/cali-front/src/shared/ModalState.tsx"],"names":["withState","withHandlers","compose","modalToggleState","modalEvents","handleOpen","setModal","handleClose","ModalState"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,YAApB,EAAkCC,OAAlC,QAAiD,WAAjD;AAOA,IAAMC,gBAAgB,GAAGH,SAAS,CAAC,MAAD,EAAS,UAAT,EAAqB,KAArB,CAAlC;AAEA,IAAMI,WAAW,GAAGH,YAAY,CAM9B;AACAI,EAAAA,UAAU,EAAE;AAAA,QAAGC,QAAH,QAAGA,QAAH;AAAA,WAAkB;AAAA,aAAMA,QAAQ,CAAC,IAAD,CAAd;AAAA,KAAlB;AAAA,GADZ;AAEAC,EAAAA,WAAW,EAAE;AAAA,QAAGD,QAAH,SAAGA,QAAH;AAAA,WAAkB;AAAA,aAAMA,QAAQ,CAAC,KAAD,CAAd;AAAA,KAAlB;AAAA;AAFb,CAN8B,CAAhC;AAWA,OAAO,IAAME,UAAU,GAAGN,OAAO,CAI/BC,gBAJ+B,EAK/BC,WAL+B,CAA1B,C,CAQP","sourcesContent":["import { withState, withHandlers, compose } from \"recompose\";\n\nexport type ModalStateProps = {\n  setModal: (state: boolean) => boolean;\n  open: boolean;\n};\n\nconst modalToggleState = withState(\"open\", \"setModal\", false);\n\nconst modalEvents = withHandlers<\n  ModalStateProps,\n  {\n    handleOpen: () => boolean;\n    handleClose: () => boolean;\n  }\n>({\n  handleOpen: ({ setModal }) => () => setModal(true),\n  handleClose: ({ setModal }) => () => setModal(false)\n});\n\nexport const ModalState = compose<\n  typeof modalToggleState & typeof modalEvents,\n  {}\n>(\n  modalToggleState,\n  modalEvents\n);\n\n//typeof modalToggleState & typeof modalEvents,\n\nexport type ModalProps = {\n  open: boolean;\n  handleOpen: (event?: any) => void;\n  handleClose: (event?: any) => void;\n  children: (handleOpen: (event?: any) => void) => void;\n};\n"]},"metadata":{},"sourceType":"module"}