{"ast":null,"code":"var _jsxFileName = \"/home/ankit/zil/cali-front/src/pages/NewEvent/Details/EventForm.tsx\";\nimport React from \"react\";\nimport { ColorSelector } from \"../../../form/ColorSelector\";\nimport { AdornText } from \"../../../shared/AdornText\";\nimport { FormField } from \"../../../form/FormField\";\nimport { adorn } from \"../../../shared/AdornText\";\nimport { FormActions } from \"../../../shared/FormActions\";\nimport { withFormik } from \"formik\";\nimport { slugify } from \"../../../shared/util\";\n//export const AdornFormField = adorn(FormField);\nexport var EventLinkField = adorn(\"link\")(FormField); //typedAdornField(\"event\");\n\nexport var NewEventForm = function NewEventForm(_ref) {\n  var _ref$linkBase = _ref.linkBase,\n      linkBase = _ref$linkBase === void 0 ? \"cali.com/robby/\" : _ref$linkBase,\n      values = _ref.values,\n      errors = _ref.errors,\n      handleSubmit = _ref.handleSubmit,\n      setFieldValue = _ref.setFieldValue,\n      handleChange = _ref.handleChange;\n  return React.createElement(\"form\", {\n    noValidate: true,\n    onSubmit: handleSubmit,\n    autoComplete: \"off\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(FormField, {\n    error: !!errors.name,\n    required: true,\n    label: \"Event Name\",\n    name: \"name\",\n    defaultValue: values.name,\n    onBlur: function onBlur(e) {\n      return !values.link ? setFieldValue(\"link\", slugify(values.name)) : null;\n    },\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(FormField, {\n    label: \"Location\",\n    name: \"location\",\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(FormField, {\n    onChange: handleChange,\n    multiline: true,\n    rows: 4,\n    label: \"Description/Instructions\",\n    name: \"description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(EventLinkField, {\n    required: true,\n    error: !!errors.link,\n    onChange: handleChange,\n    value: values.link,\n    onBlur: function onBlur(event) {\n      return !event.target.value ? setFieldValue(\"link\", slugify(values.name)) //handleChange(anyEvent(\"event\", slugify(values.name), event))\n      : handleChange(event);\n    },\n    defaultValue: values.link || slugify(values.name),\n    label: \"Event Link\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(AdornText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, linkBase)), React.createElement(ColorSelector, {\n    name: \"eventColor\",\n    handleChange: handleChange,\n    selectedValue: values.eventColor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), React.createElement(\"pre\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, JSON.stringify(values, null, 4)), React.createElement(FormActions, {\n    dividerTop: true,\n    handleNext: function handleNext() {},\n    handleCancel: function handleCancel() {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }));\n};\nexport var withEventFormik = withFormik({\n  mapPropsToValues: function mapPropsToValues(_ref2) {\n    var _ref2$link = _ref2.link,\n        link = _ref2$link === void 0 ? \"\" : _ref2$link,\n        _ref2$linkBase = _ref2.linkBase,\n        linkBase = _ref2$linkBase === void 0 ? \"\" : _ref2$linkBase,\n        _ref2$eventColor = _ref2.eventColor,\n        eventColor = _ref2$eventColor === void 0 ? \"\" : _ref2$eventColor,\n        _ref2$name = _ref2.name,\n        name = _ref2$name === void 0 ? \"\" : _ref2$name;\n    return {\n      link: link,\n      linkBase: linkBase,\n      eventColor: eventColor,\n      name: name\n    };\n  },\n  validateOnChange: true,\n  validate: function validate(values, props) {\n    if (typeof props.handleChange === \"function\") props.handleChange(values);\n    if (typeof props.validate === \"function\") return props.validate(values, props);\n  },\n  handleSubmit: function handleSubmit() {}\n});","map":{"version":3,"sources":["/home/ankit/zil/cali-front/src/pages/NewEvent/Details/EventForm.tsx"],"names":["React","ColorSelector","AdornText","FormField","adorn","FormActions","withFormik","slugify","EventLinkField","NewEventForm","linkBase","values","errors","handleSubmit","setFieldValue","handleChange","name","e","link","event","target","value","eventColor","JSON","stringify","withEventFormik","mapPropsToValues","validateOnChange","validate","props"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { ColorSelector } from \"../../../form/ColorSelector\";\nimport { AdornText, typedAdornField } from \"../../../shared/AdornText\";\nimport { FormField } from \"../../../form/FormField\";\nimport { adorn } from \"../../../shared/AdornText\";\nimport { FormActions } from \"../../../shared/FormActions\";\nimport { InjectedFormikProps, withFormik } from \"formik\";\nimport { slugify, combine } from \"../../../shared/util\";\nimport { anyEvent } from \"../../../shared/HandleChange\";\n\n//export const AdornFormField = adorn(FormField);\n\nexport const EventLinkField = adorn(\"link\")(FormField); //typedAdornField(\"event\");\n\nexport type NewEventFormProps = {\n  linkBase?: string;\n  name?: string;\n  link?: string;\n  eventColor?: string;\n};\n\nexport type NewEventFormValues = {\n  linkBase: string;\n  name: string;\n  link: string;\n  eventColor: string;\n};\n\nexport const NewEventForm: React.SFC<\n  InjectedFormikProps<NewEventFormProps, NewEventFormValues>\n> = ({\n  linkBase = \"cali.com/robby/\",\n  values,\n  errors,\n  handleSubmit,\n  setFieldValue,\n  handleChange\n}) => (\n  <form noValidate onSubmit={handleSubmit} autoComplete=\"off\">\n    <FormField\n      error={!!errors.name}\n      required\n      label=\"Event Name\"\n      name=\"name\"\n      defaultValue={values.name}\n      onBlur={e =>\n        !values.link ? setFieldValue(\"link\", slugify(values.name)) : null\n      }\n      onChange={handleChange}\n    />\n    <FormField label=\"Location\" name=\"location\" onChange={handleChange} />\n    <FormField\n      onChange={handleChange}\n      multiline\n      rows={4}\n      label=\"Description/Instructions\"\n      name=\"description\"\n    />\n    <EventLinkField\n      required\n      error={!!errors.link}\n      onChange={handleChange}\n      value={values.link}\n      onBlur={event =>\n        !event.target.value\n          ? setFieldValue(\"link\", slugify(values.name)) //handleChange(anyEvent(\"event\", slugify(values.name), event))\n          : handleChange(event)\n      }\n      defaultValue={values.link || slugify(values.name)}\n      label=\"Event Link\"\n    >\n      <AdornText>{linkBase}</AdornText>\n    </EventLinkField>\n    <ColorSelector\n      name=\"eventColor\"\n      handleChange={handleChange}\n      selectedValue={values.eventColor}\n    />\n    <pre>{JSON.stringify(values, null, 4)}</pre>\n    <FormActions dividerTop handleNext={() => {}} handleCancel={() => {}} />\n  </form>\n);\nexport const withEventFormik = withFormik<\n  NewEventFormProps & {\n    handleChange?: (values: NewEventFormValues) => void;\n    validate?: (values: NewEventFormValues, props: NewEventFormProps) => void;\n  },\n  NewEventFormValues\n>({\n  mapPropsToValues: ({\n    link = \"\",\n    linkBase = \"\",\n    eventColor = \"\",\n    name = \"\"\n  }) => ({ link, linkBase, eventColor, name }),\n  validateOnChange: true,\n  validate: (values, props) => {\n    if (typeof props.handleChange === \"function\") props.handleChange(values);\n    if (typeof props.validate === \"function\")\n      return props.validate(values, props);\n  },\n  handleSubmit: () => {}\n});\n"]},"metadata":{},"sourceType":"module"}