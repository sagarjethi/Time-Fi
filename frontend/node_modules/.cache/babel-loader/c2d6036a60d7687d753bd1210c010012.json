{"ast":null,"code":"import { DateTime, Info } from 'luxon';\n\nvar LuxonUtils =\n/** @class */\nfunction () {\n  function LuxonUtils(_a) {\n    var locale = (_a === void 0 ? {} : _a).locale;\n    this.parse = DateTime.fromFormat;\n    this.dateTime12hFormat = \"ff\";\n    this.dateTime24hFormat = \"f\";\n    this.time12hFormat = \"t\";\n    this.time24hFormat = \"T\";\n    this.dateFormat = \"DD\";\n    this.locale = locale || \"en\";\n  }\n\n  LuxonUtils.prototype.date = function (value) {\n    if (value instanceof Date) {\n      return DateTime.fromJSDate(value);\n    }\n\n    if (typeof value === \"string\") {\n      return DateTime.fromJSDate(new Date(value));\n    }\n\n    if (value instanceof DateTime) {\n      return value;\n    }\n\n    return DateTime.local();\n  };\n\n  LuxonUtils.prototype.addDays = function (date, count) {\n    if (count < 0) {\n      return date.minus({\n        days: Math.abs(count)\n      });\n    }\n\n    return date.plus({\n      days: count\n    });\n  };\n\n  LuxonUtils.prototype.isValid = function (date) {\n    return date.isValid;\n  };\n\n  LuxonUtils.prototype.isEqual = function (value, comparing) {\n    if (value === null && comparing === null) {\n      return true;\n    }\n\n    return value === comparing;\n  };\n\n  LuxonUtils.prototype.isSameDay = function (value, comparing) {\n    return value.hasSame(comparing, \"day\");\n  };\n\n  LuxonUtils.prototype.isAfter = function (value, comparing) {\n    return value > comparing;\n  };\n\n  LuxonUtils.prototype.isAfterDay = function (value, comparing) {\n    var diff = value.diff(comparing, \"days\").toObject();\n    return diff.days > 0;\n  };\n\n  LuxonUtils.prototype.isAfterYear = function (value, comparing) {\n    var diff = value.diff(comparing, \"years\").toObject();\n    return diff.years > 0;\n  };\n\n  LuxonUtils.prototype.isBefore = function (value, comparing) {\n    return value < comparing;\n  };\n\n  LuxonUtils.prototype.isBeforeDay = function (value, comparing) {\n    var diff = value.diff(comparing, \"days\").toObject();\n    return diff.days < 0;\n  };\n\n  LuxonUtils.prototype.isBeforeYear = function (value, comparing) {\n    var diff = value.diff(comparing, \"years\").toObject();\n    return diff.years < 0;\n  };\n\n  LuxonUtils.prototype.getDiff = function (value, comparing) {\n    if (typeof comparing === \"string\") {\n      comparing = DateTime.fromJSDate(new Date(comparing));\n    }\n\n    return value.diff(comparing).as(\"millisecond\");\n  };\n\n  LuxonUtils.prototype.startOfDay = function (value) {\n    return value.startOf(\"day\");\n  };\n\n  LuxonUtils.prototype.endOfDay = function (value) {\n    return value.endOf(\"day\");\n  };\n\n  LuxonUtils.prototype.format = function (date, format) {\n    return date.setLocale(this.locale).toFormat(format);\n  };\n\n  LuxonUtils.prototype.formatNumber = function (numberToFormat) {\n    return numberToFormat;\n  };\n\n  LuxonUtils.prototype.getHours = function (value) {\n    return value.get(\"hour\");\n  };\n\n  LuxonUtils.prototype.setHours = function (value, count) {\n    return value.set({\n      hour: count\n    });\n  };\n\n  LuxonUtils.prototype.getMinutes = function (value) {\n    return value.get(\"minute\");\n  };\n\n  LuxonUtils.prototype.setMinutes = function (value, count) {\n    return value.set({\n      minute: count\n    });\n  };\n\n  LuxonUtils.prototype.getSeconds = function (value) {\n    return value.get(\"second\");\n  };\n\n  LuxonUtils.prototype.setSeconds = function (value, count) {\n    return value.set({\n      second: count\n    });\n  };\n\n  LuxonUtils.prototype.getMonth = function (value) {\n    // See https://github.com/moment/luxon/blob/master/docs/moment.md#major-functional-differences\n    return value.get(\"month\") - 1;\n  };\n\n  LuxonUtils.prototype.getYear = function (value) {\n    return value.get(\"year\");\n  };\n\n  LuxonUtils.prototype.setYear = function (value, year) {\n    return value.set({\n      year: year\n    });\n  };\n\n  LuxonUtils.prototype.mergeDateAndTime = function (date, time) {\n    if (!date) {\n      return null;\n    }\n\n    return this.setMinutes(this.setHours(date, this.getHours(time)), this.getMinutes(time));\n  };\n\n  LuxonUtils.prototype.getStartOfMonth = function (value) {\n    return value.startOf(\"month\");\n  };\n\n  LuxonUtils.prototype.getNextMonth = function (value) {\n    return value.plus({\n      months: 1\n    });\n  };\n\n  LuxonUtils.prototype.getPreviousMonth = function (value) {\n    return value.minus({\n      months: 1\n    });\n  };\n\n  LuxonUtils.prototype.getWeekdays = function () {\n    return Info.weekdaysFormat(\"narrow\", {\n      locale: this.locale\n    });\n  };\n\n  LuxonUtils.prototype.getWeekArray = function (date) {\n    var days = date.endOf(\"month\").endOf(\"week\").diff(date.startOf(\"month\").startOf(\"week\"), \"days\").toObject().days;\n    var weeks = [];\n    new Array(Math.round(days)).fill(0).map(function (_, i) {\n      return i;\n    }).map(function (day) {\n      return date.startOf(\"month\").startOf(\"week\").plus({\n        days: day\n      });\n    }).forEach(function (v, i) {\n      if (i === 0 || i % 7 === 0 && i > 6) {\n        weeks.push([v]);\n        return;\n      }\n\n      weeks[weeks.length - 1].push(v);\n    });\n    return weeks;\n  };\n\n  LuxonUtils.prototype.getYearRange = function (start, end) {\n    start = this.date(start);\n    end = this.date(end).plus({\n      years: 1\n    });\n    var years = end.diff(start, \"years\").toObject().years;\n\n    if (!years || years <= 0) {\n      return [];\n    }\n\n    return new Array(Math.round(years)).fill(0).map(function (num, i) {\n      return i;\n    }).map(function (year) {\n      return start.plus({\n        years: year\n      });\n    });\n  };\n\n  LuxonUtils.prototype.getMeridiemText = function (ampm) {\n    return Info.meridiems({\n      locale: this.locale\n    }).find(function (v) {\n      return v.toLowerCase() === ampm.toLowerCase();\n    });\n  };\n\n  LuxonUtils.prototype.getCalendarHeaderText = function (date) {\n    return this.format(date, \"MMMM yyyy\");\n  };\n\n  LuxonUtils.prototype.getDatePickerHeaderText = function (date) {\n    return this.format(date, \"ccc, MMM d\");\n  };\n\n  LuxonUtils.prototype.getDateTimePickerHeaderText = function (date) {\n    return this.format(date, \"MMM d\");\n  };\n\n  LuxonUtils.prototype.getDayText = function (date) {\n    return this.format(date, \"d\");\n  };\n\n  LuxonUtils.prototype.getHourText = function (date, ampm) {\n    if (ampm) {\n      return date.toFormat(\"hh\");\n    }\n\n    return date.toFormat(\"HH\");\n  };\n\n  LuxonUtils.prototype.getMinuteText = function (date) {\n    return date.toFormat(\"mm\");\n  };\n\n  LuxonUtils.prototype.getSecondText = function (date) {\n    return date.toFormat(\"ss\");\n  };\n\n  LuxonUtils.prototype.getYearText = function (date) {\n    return date.toFormat(\"yyyy\");\n  };\n\n  LuxonUtils.prototype.isNull = function (date) {\n    return date === null;\n  };\n\n  return LuxonUtils;\n}();\n\nexport default LuxonUtils;","map":null,"metadata":{},"sourceType":"module"}