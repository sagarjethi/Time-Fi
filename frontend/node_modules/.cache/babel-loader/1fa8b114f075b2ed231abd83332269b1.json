{"ast":null,"code":"var _jsxFileName = \"/home/ankit/zil/cali-front/src/shared/FormActions.tsx\";\nimport React from \"react\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Button from \"@material-ui/core/Button\";\nimport { Container, Item } from \"../elements/Gridding\";\nimport { RenderWhen } from \"./RenderWhen\";\nexport var FormActions = function FormActions(_ref) {\n  var _ref$dividerTop = _ref.dividerTop,\n      dividerTop = _ref$dividerTop === void 0 ? false : _ref$dividerTop,\n      _ref$dividerBottom = _ref.dividerBottom,\n      dividerBottom = _ref$dividerBottom === void 0 ? false : _ref$dividerBottom,\n      handleNext = _ref.handleNext,\n      handleCancel = _ref.handleCancel;\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(RenderWhen, {\n    when: dividerTop,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  })), React.createElement(Container, {\n    justify: \"flex-end\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(Button, {\n    size: \"small\",\n    onClick: handleCancel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Cancel\"), React.createElement(Button, {\n    size: \"small\",\n    type: \"submit\",\n    color: \"primary\",\n    onClick: handleNext,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Next\"))), React.createElement(RenderWhen, {\n    when: dividerBottom,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  })));\n};","map":{"version":3,"sources":["/home/ankit/zil/cali-front/src/shared/FormActions.tsx"],"names":["React","Divider","Button","Container","Item","RenderWhen","FormActions","dividerTop","dividerBottom","handleNext","handleCancel"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,SAAT,EAAoBC,IAApB,QAAgC,sBAAhC;AACA,SAASC,UAAT,QAA2B,cAA3B;AAQA,OAAO,IAAMC,WAAuC,GAAG,SAA1CA,WAA0C;AAAA,6BACrDC,UADqD;AAAA,MACrDA,UADqD,gCACxC,KADwC;AAAA,gCAErDC,aAFqD;AAAA,MAErDA,aAFqD,mCAErC,KAFqC;AAAA,MAGrDC,UAHqD,QAGrDA,UAHqD;AAAA,MAIrDC,YAJqD,QAIrDA,YAJqD;AAAA,SAMrD,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAEH,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAC,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,OAAb;AAAqB,IAAA,OAAO,EAAEG,YAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAIE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,OAAb;AAAqB,IAAA,IAAI,EAAC,QAA1B;AAAmC,IAAA,KAAK,EAAC,SAAzC;AAAmD,IAAA,OAAO,EAAED,UAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,CADF,CAJF,EAcE,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAED,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAdF,CANqD;AAAA,CAAhD","sourcesContent":["import React from \"react\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Button from \"@material-ui/core/Button\";\nimport { Container, Item } from \"../elements/Gridding\";\nimport { RenderWhen } from \"./RenderWhen\";\n\nexport type FormActionProps = {\n  handleNext: React.MouseEventHandler;\n  handleCancel: React.MouseEventHandler;\n  dividerTop?: boolean;\n  dividerBottom?: boolean;\n};\nexport const FormActions: React.SFC<FormActionProps> = ({\n  dividerTop = false,\n  dividerBottom = false,\n  handleNext,\n  handleCancel\n}) => (\n  <React.Fragment>\n    <RenderWhen when={dividerTop}>\n      <Divider />\n    </RenderWhen>\n    <Container justify=\"flex-end\">\n      <Item>\n        <Button size=\"small\" onClick={handleCancel}>\n          Cancel\n        </Button>\n        <Button size=\"small\" type=\"submit\" color=\"primary\" onClick={handleNext}>\n          Next\n        </Button>\n      </Item>\n    </Container>\n    <RenderWhen when={dividerBottom}>\n      <Divider />\n    </RenderWhen>\n  </React.Fragment>\n);\n"]},"metadata":{},"sourceType":"module"}