{"ast":null,"code":"var _jsxFileName = \"/home/ankit/zil/cali-front/src/pages/NewEvent/Availability/AvailabilityModal.tsx\";\nimport React from \"react\";\nimport { Container, Row } from \"../../../elements/Gridding\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { FormControl, Typography } from \"@material-ui/core\";\nimport { typedAdornField } from \"../../../shared/AdornText\";\nimport { FormActions } from \"../../../shared/FormActions\";\nimport { AvailabilitySelect, availabilityTypes } from \"./AvailabilitySelect\";\nimport StartEndDatePicker from \"./StartEndDatePicker\";\nimport { compose } from \"recompose\";\nimport { RenderWhen } from \"../../../shared/RenderWhen\";\nimport { ModalState } from \"../../../shared/ModalState\";\nimport { changeHandler } from \"../../../shared/HandleChange\";\nimport { ModalForm } from \"../../../shared/ModalForm\";\nimport { combine, edgeDelay } from \"../../../shared/util\";\nvar initialState = {\n  available: availabilityTypes.ROLLING\n};\nexport var availabilityStates = compose(changeHandler(initialState), ModalState);\nvar AvailableAdornField = typedAdornField(\"available\");\nexport var AvailabilityModal = function AvailabilityModal(_ref) {\n  var open = _ref.open,\n      available = _ref.available,\n      handleChange = _ref.handleChange,\n      resetChange = _ref.resetChange,\n      children = _ref.children,\n      handleOpen = _ref.handleOpen,\n      handleClose = _ref.handleClose;\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Dialog, {\n    fullWidth: true,\n    open: open,\n    scroll: \"body\",\n    onClose: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Availability\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(ModalForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(AvailabilitySelect, {\n    value: available,\n    handleChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(RenderWhen, {\n    when: available === availabilityTypes.ROLLING,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    fullWidth: true,\n    margin: \"normal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(AvailableAdornField, {\n    onChange: handleChange //name=\"available\"\n    ,\n    InputLabelProps: {\n      shrink: true\n    },\n    defaultValue: 60,\n    margin: \"normal\",\n    position: \"end\",\n    label: \"Number of days into the future.\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"body2\",\n    style: {\n      width: \"5rem\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"rolling days\")))), React.createElement(RenderWhen, {\n    when: available === availabilityTypes.RANGE,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(StartEndDatePicker, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  })), React.createElement(RenderWhen, {\n    when: available === availabilityTypes.INDEF,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"Your invitees will be offered availability indefinitely into the future.\")), React.createElement(FormActions, {\n    handleNext: function handleNext() {},\n    handleCancel: combine(handleClose, edgeDelay(resetChange)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }))))))), children(handleOpen));\n};\nexport default availabilityStates(AvailabilityModal);","map":{"version":3,"sources":["/home/ankit/zil/cali-front/src/pages/NewEvent/Availability/AvailabilityModal.tsx"],"names":["React","Container","Row","Dialog","DialogContent","DialogTitle","FormControl","Typography","typedAdornField","FormActions","AvailabilitySelect","availabilityTypes","StartEndDatePicker","compose","RenderWhen","ModalState","changeHandler","ModalForm","combine","edgeDelay","initialState","available","ROLLING","availabilityStates","AvailableAdornField","AvailabilityModal","open","handleChange","resetChange","children","handleOpen","handleClose","shrink","width","RANGE","INDEF"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Container, Row } from \"../../../elements/Gridding\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { FormControl, Typography } from \"@material-ui/core\";\nimport { typedAdornField } from \"../../../shared/AdornText\";\nimport { FormActions } from \"../../../shared/FormActions\";\nimport { AvailabilitySelect, availabilityTypes } from \"./AvailabilitySelect\";\nimport StartEndDatePicker from \"./StartEndDatePicker\";\nimport { compose } from \"recompose\";\nimport { RenderWhen } from \"../../../shared/RenderWhen\";\nimport { ModalState, ModalProps } from \"../../../shared/ModalState\";\nimport {\n  changeHandler,\n  HandleChangeType,\n  ResetChangeType,\n  ChangeResetHandlerProps\n} from \"../../../shared/HandleChange\";\nimport { ModalForm } from \"../../../shared/ModalForm\";\nimport { combine, edgeDelay } from \"../../../shared/util\";\n\nconst initialState = { available: availabilityTypes.ROLLING };\nexport const availabilityStates = compose<\n  AvailabilityModalProps,\n  {\n    children: ModalProps[\"handleOpen\"];\n  }\n>(\n  changeHandler(initialState),\n  ModalState\n);\n\nexport type AvailabilityModalProps = ModalProps &\n  ChangeResetHandlerProps<typeof initialState>;\n\nconst AvailableAdornField = typedAdornField(\"available\");\n\nexport const AvailabilityModal: React.SFC<AvailabilityModalProps> = ({\n  open,\n  available,\n  handleChange,\n  resetChange,\n  children,\n  handleOpen,\n  handleClose\n}) => {\n  return (\n    <React.Fragment>\n      <Dialog fullWidth open={open} scroll=\"body\" onClose={handleClose}>\n        <div>\n          <DialogTitle>Availability</DialogTitle>\n          <DialogContent>\n            <Container>\n              <Row>\n                <ModalForm>\n                  <AvailabilitySelect\n                    value={available}\n                    handleChange={handleChange as any}\n                  />\n                  <RenderWhen when={available === availabilityTypes.ROLLING}>\n                    <FormControl fullWidth margin=\"normal\">\n                      <AvailableAdornField\n                        onChange={handleChange as any}\n                        //name=\"available\"\n                        InputLabelProps={{ shrink: true }}\n                        defaultValue={60}\n                        margin=\"normal\"\n                        position=\"end\"\n                        label=\"Number of days into the future.\"\n                      >\n                        <Typography variant=\"body2\" style={{ width: \"5rem\" }}>\n                          rolling days\n                        </Typography>\n                      </AvailableAdornField>\n                    </FormControl>\n                  </RenderWhen>\n                  <RenderWhen when={available === availabilityTypes.RANGE}>\n                    <StartEndDatePicker />\n                  </RenderWhen>\n                  <RenderWhen when={available === availabilityTypes.INDEF}>\n                    <Typography variant=\"body2\" color=\"primary\">\n                      Your invitees will be offered availability indefinitely\n                      into the future.\n                    </Typography>\n                  </RenderWhen>\n                  <FormActions\n                    handleNext={() => {}}\n                    handleCancel={combine(handleClose, edgeDelay(resetChange))}\n                  />\n                </ModalForm>\n              </Row>\n            </Container>\n          </DialogContent>\n        </div>\n      </Dialog>\n      {children(handleOpen)}\n    </React.Fragment>\n  );\n};\n\nexport default availabilityStates(AvailabilityModal);\n"]},"metadata":{},"sourceType":"module"}