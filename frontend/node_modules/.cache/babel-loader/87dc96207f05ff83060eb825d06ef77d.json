{"ast":null,"code":"import _defineProperty from \"/home/ankit/zil/cali-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/ankit/zil/cali-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { withStateHandlers } from \"recompose\";\nexport function anyEvent(name, value) {\n  var origEvent = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n    target: {}\n  };\n  return _objectSpread({}, origEvent, {\n    target: _objectSpread({}, origEvent.target, {\n      name: name,\n      value: value\n    })\n  });\n} //let x = anyEvent(\"tzLocale\", \"okaythanks\");\n\nexport var GenEvent = anyEvent;\nexport function changeHandler(origState) {\n  return withStateHandlers(origState, {\n    handleChange: function handleChange(state) {\n      return function (_ref) {\n        var target = _ref.target;\n        return _objectSpread({}, state, _defineProperty({}, target.name, target.value));\n      };\n    },\n    resetChange: function resetChange(state) {\n      return function () {\n        return origState;\n      };\n    }\n  });\n}","map":{"version":3,"sources":["/home/ankit/zil/cali-front/src/shared/HandleChange.tsx"],"names":["withStateHandlers","anyEvent","name","value","origEvent","target","GenEvent","changeHandler","origState","handleChange","state","resetChange"],"mappings":";;AAAA,SAASA,iBAAT,QAAkC,WAAlC;AA2BA,OAAO,SAASC,QAAT,CACLC,IADK,EAELC,KAFK,EAIL;AAAA,MADAC,SACA,uEADY;AAAEC,IAAAA,MAAM,EAAE;AAAV,GACZ;AACA,2BACKD,SADL;AAEEC,IAAAA,MAAM,oBAAOD,SAAS,CAACC,MAAjB;AAAyBH,MAAAA,IAAI,EAAJA,IAAzB;AAA+BC,MAAAA,KAAK,EAALA;AAA/B;AAFR;AAID,C,CAED;;AAEA,OAAO,IAAMG,QAAQ,GAAGL,QAAjB;AAEP,OAAO,SAASM,aAAT,CAA0BC,SAA1B,EAAwC;AAC7C,SAAOR,iBAAiB,CAACQ,SAAD,EAAY;AAClCC,IAAAA,YAAY,EAAE,sBAAAC,KAAK;AAAA,aAAI,gBAAgB;AAAA,YAAbL,MAAa,QAAbA,MAAa;AACrC,iCACKK,KADL,sBAEGL,MAAM,CAACH,IAFV,EAEiBG,MAAM,CAACF,KAFxB;AAID,OALkB;AAAA,KADe;AAOlCQ,IAAAA,WAAW,EAAE,qBAAAD,KAAK;AAAA,aAAI;AAAA,eAAMF,SAAN;AAAA,OAAJ;AAAA;AAPgB,GAAZ,CAAxB;AASD","sourcesContent":["import { withStateHandlers } from \"recompose\";\n\nexport type HandleChangeType<T, U = string> = (\n  event: GenericEvent<T, U>,\n  value?: U\n) => void;\nexport type ResetChangeType = () => void;\n\n/*export type ChangeHandlerProps<T extends string, U = string> = {\n  handleChange: HandleChangeType<T, U>;\n} & { [key in T]: U };*/\n\nexport type ChangeHandlerProps<T> = {\n  handleChange: HandleChangeType<keyof T, T[keyof T]>;\n} & T;\n\nexport type ChangeResetHandlerProps<T> = ChangeHandlerProps<T> & {\n  resetChange?: ResetChangeType;\n};\n\ntype GenericEvent<T, U> = {\n  target: {\n    name: T;\n    value: U;\n  };\n};\n\nexport function anyEvent<T extends string, U>(\n  name: T,\n  value: U,\n  origEvent = { target: {} } as any\n) {\n  return {\n    ...origEvent,\n    target: { ...origEvent.target, name, value }\n  } as GenericEvent<T, U>;\n}\n\n//let x = anyEvent(\"tzLocale\", \"okaythanks\");\n\nexport const GenEvent = anyEvent;\n\nexport function changeHandler<T>(origState: T) {\n  return withStateHandlers(origState, {\n    handleChange: state => ({ target }) => {\n      return {\n        ...state,\n        [target.name]: target.value\n      } as T;\n    },\n    resetChange: state => () => origState\n  });\n}\n"]},"metadata":{},"sourceType":"module"}